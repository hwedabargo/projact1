{"ast":null,"code":"import { CREATE_POST } from \"../Constant/action-types\";\nimport { CHANGE_IS_DONE } from \"../Constant/action-types\";\nimport { EDIT_POST } from \"../Constant/action-types\";\nconst initialstate = {\n  posts: [{\n    id: Math.random(),\n    description: \"We are working on preparing birthday parties and other special parties exclusively with us .. during the current month\",\n    isDone: false\n  }, {\n    id: Math.random(),\n    description: \"During next March, we will arrange VIP meetings.\",\n    isDone: false\n  }, {\n    id: Math.random(),\n    description: \"Everything new in the world of sweets, we offer.\",\n    isDone: false\n  }, {\n    id: Math.random(),\n    description: \"Our exclusive vegan cheesecake.\",\n    isDone: false\n  }]\n};\n\nfunction rootReducer(state = initialstate, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case CREATE_POST:\n      return {\n        posts: state.posts.concat({\n          id: Math.random(),\n          description: payload.toCreatePost,\n          isDone: false\n        })\n      };\n\n    case CHANGE_IS_DONE:\n      return {\n        posts: state.posts.map(item => item.id === payload.id ? { ...item,\n          isDone: !item.isDone\n        } : item)\n      };\n\n    case EDIT_POST:\n      return {\n        posts: state.posts.map(item => item.id === payload.id ? { ...item,\n          description: payload.description\n        } : item)\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        items: state.items.filter(item => item !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/Hweda Bargo 360/Desktop/project gomycode/sugarcoffeeapp/src/Components/AdminCard/Redux/Reducers/index.js"],"names":["CREATE_POST","CHANGE_IS_DONE","EDIT_POST","initialstate","posts","id","Math","random","description","isDone","rootReducer","state","action","type","payload","concat","toCreatePost","map","item","DELETE_POST","items","filter"],"mappings":"AAAA,SAASA,WAAT,QAA4B,0BAA5B;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,SAAT,QAA0B,0BAA1B;AAEA,MAAMC,YAAY,GAAE;AAGnBC,EAAAA,KAAK,EAAC,CACH;AACCC,IAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADL;AAECC,IAAAA,WAAW,EAAC,wHAFb;AAGCC,IAAAA,MAAM,EAAE;AAHT,GADG,EAOD;AACAJ,IAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADJ;AAEAC,IAAAA,WAAW,EAAC,kDAFZ;AAGAC,IAAAA,MAAM,EAAE;AAHR,GAPC,EAaD;AACIJ,IAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADR;AAEIC,IAAAA,WAAW,EAAC,kDAFhB;AAGIC,IAAAA,MAAM,EAAE;AAHZ,GAbC,EAkBD;AACIJ,IAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADR;AAEIC,IAAAA,WAAW,EAAC,iCAFhB;AAGIC,IAAAA,MAAM,EAAE;AAHZ,GAlBC;AAHa,CAApB;;AA8BA,SAASC,WAAT,CAAqBC,KAAK,GAAGR,YAA7B,EAA4CS,MAA5C,EAAmD;AAG/C,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAgBF,MAAtB;;AACA,UAAOC,IAAP;AACI,SAAKb,WAAL;AACI,aAAO;AACHI,QAAAA,KAAK,EAAGO,KAAK,CAACP,KAAN,CAAYW,MAAZ,CAAmB;AAACV,UAAAA,EAAE,EAACC,IAAI,CAACC,MAAL,EAAJ;AACvBC,UAAAA,WAAW,EAAEM,OAAO,CAACE,YADE;AAEvBP,UAAAA,MAAM,EAAE;AAFe,SAAnB;AADL,OAAP;;AAMA,SAAKR,cAAL;AACI,aAAM;AACFG,QAAAA,KAAK,EAAGO,KAAK,CAACP,KAAN,CAAYa,GAAZ,CAAiBC,IAAD,IACxBA,IAAI,CAACb,EAAL,KAAYS,OAAO,CAACT,EAApB,GAAyB,EAAC,GAAGa,IAAJ;AAAST,UAAAA,MAAM,EAAG,CAACS,IAAI,CAACT;AAAxB,SAAzB,GAA2DS,IADnD;AADN,OAAN;;AAOJ,SAAKhB,SAAL;AACI,aAAM;AACFE,QAAAA,KAAK,EAAGO,KAAK,CAACP,KAAN,CAAYa,GAAZ,CAAiBC,IAAD,IACxBA,IAAI,CAACb,EAAL,KAAYS,OAAO,CAACT,EAApB,GACA,EAAC,GAAGa,IAAJ;AAASV,UAAAA,WAAW,EAAGM,OAAO,CAACN;AAA/B,SADA,GAEEU,IAHM;AADN,OAAN;;AASX,SAAKC,WAAL;AACD,aAAO,EACH,GAAGR,KADA;AAEHS,QAAAA,KAAK,EAAET,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBH,IAAI,IAAIA,IAAI,KAAKN,MAAM,CAACE,OAA3C;AAFJ,OAAP;;AAIQ;AACI,aAAOH,KAAP;AAhCZ;AAoCH;;AACD,eAAeD,WAAf","sourcesContent":["import { CREATE_POST } from \"../Constant/action-types\";\r\nimport { CHANGE_IS_DONE } from \"../Constant/action-types\";\r\nimport { EDIT_POST } from \"../Constant/action-types\";\r\n\r\nconst initialstate ={\r\n\r\n\r\n posts:[\r\n    {\r\n     id: Math.random(),\r\n     description:\"We are working on preparing birthday parties and other special parties exclusively with us .. during the current month\",\r\n     isDone: false,\r\n      },\r\n\r\n      {\r\n      id: Math.random(),\r\n      description:\"During next March, we will arrange VIP meetings.\",\r\n      isDone: false,\r\n      },\r\n \r\n      {\r\n          id: Math.random(),\r\n          description:\"Everything new in the world of sweets, we offer.\",\r\n          isDone: false,\r\n      },\r\n      {\r\n          id: Math.random(),\r\n          description:\"Our exclusive vegan cheesecake.\",\r\n          isDone: false,\r\n      },\r\n],\r\n\r\n};\r\n\r\nfunction rootReducer(state = initialstate , action){\r\n\r\n\r\n    const {type,payload}= action;\r\n    switch(type){\r\n        case CREATE_POST:\r\n            return {\r\n                posts : state.posts.concat({id:Math.random(),\r\n                    description: payload.toCreatePost,\r\n                    isDone: false\r\n                }),\r\n            };\r\n            case CHANGE_IS_DONE :\r\n                return{\r\n                    posts : state.posts.map((item)=>\r\n                    item.id === payload.id ? {...item,isDone : !item.isDone }: item\r\n\r\n\r\n                    ),\r\n                };\r\n            case EDIT_POST:\r\n                return{\r\n                    posts : state.posts.map((item)=>\r\n                    item.id === payload.id ? \r\n                    {...item,description : payload.description }\r\n                    : item\r\n\r\n\r\n                    ),\r\n                };\r\n     case DELETE_POST:\r\n    return {\r\n        ...state,\r\n        items: state.items.filter(item => item !== action.payload)\r\n    };\r\n            default: \r\n                return state;\r\n            \r\n    }\r\n    \r\n}\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}